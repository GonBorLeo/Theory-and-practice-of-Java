package Regexp;
/*
Классы Pattern и Matcher

Класс Pattern представляет из себя само регулярное выражение, т.е
когда мы составим наше регулярное выражение, мы поместим его в класс
Pattern

Класс Mather использует наш паттерн, чтобы проводить операции над текстом

Самое распространенное использование этих классов - это использование
их в поиске паттернов/совпадений в тексте
 */

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Regexp_3 {
    public static void main(String[] args) {
        String text = "Hello, Guys! I send you my email joe@gmail.com so we can\n +" +
                " keep in touch. Thanks, Joe! That's cool. I am sending you my\n " +
                " address: tim@yandex.ru. Let's stay in touch...";
        /*
         Создание объекта класса Pattern. В аргумент метода
         compile() передается регулярное выражение
         */
        Pattern email = Pattern.compile("(\\w+)@(gmail|yandex)\\.(com|ru)");

        /*
        Создание объекта Mather, которая будет работать с нашим паттерном.
        Метод mather() вызывается на объекте класса Pattern и он
        возвращает объект класса Mather. Т.е. мы получаем матчер на
        основании нашего паттерна.
        При вызове метода mather() необходимо в его аргумент передать
        ту самую строку с которой мы будем работать

         */
        Matcher matcher = email.matcher(text);

        /*
        Метод find() ищет очередное соответствие в тексте нашему
        паттерну
         */
        while (matcher.find()) {
            /*
            Метод group() возвращает то, что было найдено методом find()
            Метод group() может вызываться как с аргументом, так и
            без аргумента.

            При вызове без указания аргумента метод вернет всю строку,
            которая совпадает с регулярным выражением.

            При вызове с указанием аргумента в метод передается целое
            число, которое обозначает id/номер "группы". Группа -
            это любая строка, которая находится в круглых скобках нашего
            регулярного выражения. В итоге метод group() вернет не всю
            строку, которая совпадает с регулярным выражением, а только
            ту её часть (т.е. группу), порядковый номер которой был передан
            в качестве аргумента.
            Нумерация начинается с единицы, идет слева направо. Если
            есть вложенность, то сначала учитывается внешняя группа, а
            уже потом внутренние группы той же внешней группы
             */
            System.out.println(matcher.group(1));
        }



    }
}
